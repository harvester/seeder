{{- if .Values.stack.hook.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: download-hook
  namespace: {{ .Release.Namespace }}
data:
  entrypoint.sh: |-
    #!/usr/bin/env bash
    # This script is designed to download the Hook artifacts.
    set -euxo pipefail
    cd /output
    rm -f *.tar.gz checksum.txt vmlinuz* initramfs*
    base_loc="{{ .Values.stack.hook.downloadURL }}"
    files="$base_loc/hook_aarch64.tar.gz $base_loc/hook_x86_64.tar.gz"
    tmp_dir=$(mktemp -d)
    for f in ${files}; do
      echo "${f}"
      wget -P "${tmp_dir}" "${f}"
    done
    for f in ${tmp_dir}/*.tar.gz; do tar --no-same-permissions --overwrite -ozxvf "${f}" && rm -f "${f}"; done
    rm -rf "${tmp_dir}"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: download-hook
  namespace: {{ .Release.Namespace }}
spec:
  backoffLimit: 50
  template:
    metadata:
      labels:
        app: download-hook
    spec:
      containers:
        - name: download-hook
          image: {{ .Values.stack.hook.image }}
          command: ["/script/entrypoint.sh"]
          volumeMounts:
            - mountPath: /output
              name: hook-artifacts
            - mountPath: /script
              name: configmap-volume
      restartPolicy: OnFailure
      volumes:
        - name: hook-artifacts
          hostPath:
            path: {{ .Values.stack.hook.downloadsDest }}
            type: DirectoryOrCreate
        - name: configmap-volume
          configMap:
            defaultMode: 0700
            name: download-hook
{{- end }}
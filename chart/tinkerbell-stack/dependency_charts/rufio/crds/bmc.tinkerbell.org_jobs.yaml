---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: jobs.bmc.tinkerbell.org
spec:
  group: bmc.tinkerbell.org
  names:
    categories:
    - tinkerbell
    kind: Job
    listKind: JobList
    plural: jobs
    shortNames:
    - j
    singular: job
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Job is the Schema for the bmcjobs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: JobSpec defines the desired state of Job
            properties:
              machineRef:
                description: MachineRef represents the Machine resource to execute
                  the job. All the tasks in the job are executed for the same Machine.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              tasks:
                description: Tasks represents a list of baseboard management actions
                  to be executed. The tasks are executed sequentially. Controller
                  waits for one task to complete before executing the next. If a single
                  task fails, job execution stops and sets condition Failed. Condition
                  Completed is set only if all the tasks were successful.
                items:
                  description: Action represents the action to be performed. A single
                    task can only perform one type of action. For example either PowerAction
                    or OneTimeBootDeviceAction.
                  maxProperties: 1
                  properties:
                    oneTimeBootDeviceAction:
                      description: OneTimeBootDeviceAction represents a baseboard
                        management one time set boot device operation.
                      properties:
                        device:
                          description: Devices represents the boot devices, in order
                            for setting one time boot. Currently only the first device
                            in the slice is used to set one time boot.
                          items:
                            description: BootDevice represents boot device of the
                              Machine.
                            type: string
                          type: array
                        efiBoot:
                          description: EFIBoot instructs the machine to use EFI boot.
                          type: boolean
                      required:
                      - device
                      type: object
                    powerAction:
                      description: PowerAction represents a baseboard management power
                        operation.
                      enum:
                      - "on"
                      - "off"
                      - soft
                      - status
                      - cycle
                      - reset
                      type: string
                    virtualMediaAction:
                      description: VirtualMediaAction represents a baseboard management
                        virtual media insert/eject.
                      properties:
                        kind:
                          type: string
                        mediaURL:
                          description: mediaURL represents the URL of the image to
                            be inserted into the virtual media, or empty to eject
                            media.
                          type: string
                      required:
                      - kind
                      type: object
                  type: object
                minItems: 1
                type: array
            required:
            - machineRef
            - tasks
            type: object
          status:
            description: JobStatus defines the observed state of Job
            properties:
              completionTime:
                description: CompletionTime represents time when the job was completed.
                  The completion time is only set when the job finishes successfully.
                format: date-time
                type: string
              conditions:
                description: Conditions represents the latest available observations
                  of an object's current state.
                items:
                  properties:
                    message:
                      description: Message represents human readable message indicating
                        details about last transition.
                      type: string
                    status:
                      description: Status is the status of the Job condition. Can
                        be True or False.
                      type: string
                    type:
                      description: Type of the Job condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              startTime:
                description: StartTime represents time when the Job controller started
                  processing a job.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

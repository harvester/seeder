
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: inventories.metal.harvesterhci.io
spec:
  group: metal.harvesterhci.io
  names:
    kind: Inventory
    listKind: InventoryList
    plural: inventories
    singular: inventory
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: InventoryStatus
      type: string
    - jsonPath: .status.generatedPassword
      name: GeneratedPassword
      type: string
    - jsonPath: .status.pxeBootConfig.address
      name: AllocatedNodeAddress
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Inventory is the Schema for the inventories API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InventorySpec defines the desired state of Inventory
            properties:
              arch:
                default: amd64
                enum:
                - amd64
                - arm64
                type: string
              baseboardSpec:
                description: MachineSpec defines desired machine state.
                properties:
                  connection:
                    description: Connection contains connection data for a Baseboard
                      Management Controller.
                    properties:
                      authSecretRef:
                        description: AuthSecretRef is the SecretReference that contains
                          authentication information of the Machine. The Secret must
                          contain username and password keys. This is optional as
                          it is not required when using the RPC provider.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                      host:
                        description: Host is the host IP address or hostname of the
                          Machine.
                        minLength: 1
                        type: string
                      insecureTLS:
                        description: InsecureTLS specifies trusted TLS connections.
                        type: boolean
                      port:
                        default: 623
                        description: Port is the port number for connecting with the
                          Machine.
                        type: integer
                      providerOptions:
                        description: ProviderOptions contains provider specific options.
                        properties:
                          intelAMT:
                            description: IntelAMT contains the options to customize
                              the IntelAMT provider.
                            properties:
                              port:
                                description: Port that intelAMT will use for calls.
                                type: integer
                            required:
                            - port
                            type: object
                          ipmitool:
                            description: IPMITOOL contains the options to customize
                              the Ipmitool provider.
                            properties:
                              cipherSuite:
                                description: CipherSuite that ipmitool will use for
                                  calls.
                                type: string
                              port:
                                description: Port that ipmitool will use for calls.
                                type: integer
                            type: object
                          redfish:
                            description: Redfish contains the options to customize
                              the Redfish provider.
                            properties:
                              port:
                                description: Port that redfish will use for calls.
                                type: integer
                            required:
                            - port
                            type: object
                          rpc:
                            description: RPC contains the options to customize the
                              RPC provider.
                            properties:
                              consumerURL:
                                description: ConsumerURL is the URL where an rpc consumer/listener
                                  is running and to which we will send and receive
                                  all notifications.
                                type: string
                              experimental:
                                description: Experimental options.
                                properties:
                                  customRequestPayload:
                                    description: CustomRequestPayload must be in json.
                                    type: string
                                  dotPath:
                                    description: 'DotPath is the path to the json
                                      object where the bmclib RequestPayload{} struct
                                      will be embedded. For example: object.data.body'
                                    type: string
                                type: object
                              hmac:
                                description: HMAC is the options used to create a
                                  HMAC signature.
                                properties:
                                  prefixSigDisabled:
                                    description: 'PrefixSigDisabled determines whether
                                      the algorithm will be prefixed to the signature.
                                      Example: sha256=abc123'
                                    type: boolean
                                  secrets:
                                    description: Secrets are a map of algorithms to
                                      secrets used for signing.
                                type: object
                              logNotificationsDisabled:
                                description: LogNotificationsDisabled determines whether
                                  responses from rpc consumer/listeners will be logged
                                  or not.
                                type: boolean
                              request:
                                description: Request is the options used to create
                                  the rpc HTTP request.
                                properties:
                                  httpContentType:
                                    description: HTTPContentType is the content type
                                      to use for the rpc request notification.
                                    type: string
                                  httpMethod:
                                    description: HTTPMethod is the HTTP method to
                                      use for the rpc request notification.
                                    type: string
                                  staticHeaders:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: StaticHeaders are predefined headers
                                      that will be added to every request.
                                    type: object
                                  timestampFormat:
                                    description: TimestampFormat is the time format
                                      for the timestamp header.
                                    type: string
                                  timestampHeader:
                                    description: 'TimestampHeader is the header name
                                      that should contain the timestamp. Example:
                                      X-BMCLIB-Timestamp'
                                    type: string
                                type: object
                              signature:
                                description: Signature is the options used for adding
                                  an HMAC signature to an HTTP request.
                                properties:
                                  appendAlgoToHeaderDisabled:
                                    description: 'AppendAlgoToHeaderDisabled decides
                                      whether to append the algorithm to the signature
                                      header or not. Example: X-BMCLIB-Signature becomes
                                      X-BMCLIB-Signature-256 When set to true, a header
                                      will be added for each algorithm. Example: X-BMCLIB-Signature-256
                                      and X-BMCLIB-Signature-512'
                                    type: boolean
                                  headerName:
                                    description: 'HeaderName is the header name that
                                      should contain the signature(s). Example: X-BMCLIB-Signature'
                                    type: string
                                  includedPayloadHeaders:
                                    description: 'IncludedPayloadHeaders are headers
                                      whose values will be included in the signature
                                      payload. Example: X-BMCLIB-My-Custom-Header
                                      All headers will be deduplicated.'
                                    items:
                                      type: string
                                    type: array
                                type: object
                            required:
                            - consumerURL
                            type: object
                        type: object
                    required:
                    - host
                    - insecureTLS
                    type: object
                required:
                - connection
                type: object
              events:
                properties:
                  enabled:
                    default: false
                    type: boolean
                  pollingInterval:
                    default: 1h
                    format: duration
                    type: string
                required:
                - enabled
                type: object
              managementInterfaceMacAddress:
                type: string
              powerActionRequested:
                type: string
              primaryDisk:
                type: string
            required:
            - baseboardSpec
            - events
            - managementInterfaceMacAddress
            - primaryDisk
            type: object
          status:
            description: InventoryStatus defines the observed state of Inventory
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      type: string
                    lastUpdateTime:
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              generatedPassword:
                type: string
              hardwareID:
                type: string
              ownerCluster:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
              powerAction:
                properties:
                  actionStatus:
                    type: string
                  lastActionRequested:
                    type: string
                  lastJobName:
                    type: string
                type: object
              pxeBootConfig:
                properties:
                  address:
                    type: string
                  gateway:
                    type: string
                  nameServers:
                    items:
                      type: string
                    type: array
                  netmask:
                    type: string
                type: object
              status:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

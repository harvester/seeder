FROM golang:1.21

ARG DAPPER_HOST_ARCH
ENV ARCH $DAPPER_HOST_ARCH

RUN export K8S_VERSION=1.24.2 && \
    curl -sSLo envtest-bins.tar.gz "https://go.kubebuilder.io/test-tools/${K8S_VERSION}/$(go env GOOS)/$(go env GOARCH)" && \
    mkdir /usr/local/kubebuilder && \
    tar -C /usr/local/kubebuilder --strip-components=1 -zvxf envtest-bins.tar.gz && \
    curl -sSLo kustomize.tar.gz "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.5.7/kustomize_v4.5.7_linux_amd64.tar.gz" && \
    tar -C /usr/bin --strip-components=1 -zxvf kustomize.tar.gz && \
    go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.8.0

RUN apt update && \
    apt install -y bash git gcc docker.io vim less file curl wget ca-certificates qemu-utils

## install golangci
RUN if [ "${ARCH}" = "amd64" ]; then \
    curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.51.0; \
    fi


ENV DAPPER_ENV REPO TAG DRONE_TAG CROSS SKIPINDRONE
ENV DAPPER_SOURCE /go/src/github.com/harvester/seeder
ENV DAPPER_OUTPUT ./bin ./pkg/api ./config
ENV DAPPER_DOCKER_SOCKET true
WORKDIR ${DAPPER_SOURCE}

ENTRYPOINT ["./scripts/entry"]
CMD ["ci"]
